# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Write SSH keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H "${{ secrets.HOST_NAME }}" > ~/.ssh/known_hosts

    - name: Copy built binary to server
      run: |
        ssh -T root@"${{ secrets.HOST_NAME }}" pkill translate || true
        scp ./translate root@"${{ secrets.HOST_NAME }}":

    - name: Run binary
      run: |
        ssh -T root@"${{ secrets.HOST_NAME }}" <<EOF
          chmod +x ./translate
          export TWITCH_CHANNEL="${{ secrets.TWITCH_CHANNEL }}"
          export TWITCH_BOT_USERNAME="${{ secrets.TWITCH_BOT_USERNAME }}"
          export TWITCH_OAUTH="${{ secrets.TWITCH_OAUTH }}"
          export GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}"
          nohup ./translate > nohup.out 2> nohup.err &
        EOF

        
      
